var express = require('express');
var router = express.Router();

var request = require("request");
const icr_account = ''
const auth_token =''

function getVA_URL(url,){
  return new Promise((resolve, reject) => {
    var options = {url: url,
                method: 'GET',
                headers: {
                      'Account': icr_account,
                      'Authorization': auth_token
                }
  };
    request.get(options, function(err, resp, body) {
      if (err) {
          reject(err);
      } else {
          resolve(body);
      }
    })
  })
}

router.get('/VADashboard', function(req, res, next) {
    Promise.all([
      getVA_URL('https://us.icr.io/va/api/v3/report/account/status'),
      getVA_URL('https://us.icr.io/va/api/v3/report/account')
    ]).then(([containerReport, accountStatus]) =>
      {
       accountStatus=JSON.parse(accountStatus);
       containerReport=JSON.parse(containerReport);
       console.log(accountStatus);
       console.log(containerReport);
       res.render('VADashboard', {assessmentList: accountStatus['assessments'], containerList: containerReport['images']});
      }
      )
  });

  router.get('/VAContainerDetails', function(req,res,next) {
    var exempt_url = 'https://us.icr.io/va/api/v3/exemptions/image/'+req.query.image_name;
    var runninglist_url = 'https://us.icr.io/va/api/v3/report/image/'+req.query.image_name+'/containers';
    var va_assessment_url =  'https://us.icr.io/va/api/v3/report/image/'+req.query.image_name;
    var resource_exemptions_url= 'https://us.icr.io/va/api/v3/exempt/image/';
    var overall_status_url = 'https://us.icr.io/va/api/v3/report/image/status/'+req.query.image_name;
    console.log(exempt_url);
    console.log(runninglist_url);
    console.log(va_assessment_url);
    console.log(resource_exemptions_url);
    console.log(overall_status_url);
    Promise.all([
      getVA_URL(exempt_url),
      getVA_URL(va_assessment_url),
      getVA_URL(runninglist_url),
      getVA_URL(resource_exemptions_url),
      getVA_URL(overall_status_url) 
     ]).then(([retexemptList, retassessmentList, retrunningList, retresourceExemptionsList, retoverallList]) =>
    {
     if (retexemptList !== null){
        retexemptList=JSON.parse(retexemptList);
        console.log("Exemptions List by image: " ,retexemptList)}
    else
        console.log("No exemptions exist");
        
     if (retrunningList !== 'null'){
        retrunningList=JSON.parse(retrunningList);
        console.log("List of running containers: ", retrunningList);
     }
     else
      console.log("No running containers");

     if (retassessmentList !== null){
        retassessmentList=JSON.parse(retassessmentList);
        console.log("Container assessment: ", retassessmentList);
     }
     else
      console.log("No container assessment");

     if (retresourceExemptionsList !== 'null'){
       retresourceExemptionsList=JSON.parse(retresourceExemptionsList);
       console.log("Exemptions by resource list: ", retresourceExemptionsList);
     }
     else
      console.log("No exemptions for container");

     if (retoverallList !== null){
        retoverallList=JSON.parse(retoverallList);
        console.log("Overall image status: ", retoverallList);
     }
     else
      console.log("No overall status for container");    
     
      res.render('VAContainers', {containerName: req.query.image_name, assessmentList: retassessmentList, overallList: retoverallList, resourceExemptionsList: retresourceExemptionsList, runningList: retrunningList, exemptionsList: retexemptList});
    }
    )
  });

module.exports = router;
